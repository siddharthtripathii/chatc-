# Simple C++ Chat Application

This project is a simple console-based chat application written in C++. It consists of a server and a client. The client (`chat1.cpp`) connects to the server and allows users to send and receive messages in real time.

## Features

- Multi-user chat support
- Real-time message sending and receiving
- Simple command-line interface
- Graceful shutdown on exit

## Requirements

- Windows OS
- [MinGW-w64](https://www.mingw-w64.org/) or Visual Studio (for compiling)
- C++11 or newer
- Both server and client must be on the same network (or port-forwarded for remote access)

## Files

- `server.cpp` — The chat server. Accepts connections from multiple clients and relays messages.
- `chat1.cpp` — The chat client. Connects to the server and allows the user to chat.

## Building

Open a terminal in the project directory and run:

### Compile the server:
```sh
g++ server.cpp -o server -lws2_32 -std=c++11
```

### Compile the client:
```sh
g++ chat1.cpp -o client -lws2_32 -std=c++11
```

## Usage

### 1. Start the Server

Run the server on your host machine:
```sh
server.exe
```
The server will listen for incoming connections.

### 2. Start the Client

On the same or another machine, run the client:
```sh
client.exe
```
- Enter the server's IP address and port if prompted (edit `chat1.cpp` to set the correct server IP).
- Enter your chat name when prompted.
- Type messages and press Enter to send.
- Type `Quit` to exit the chat.

## Configuration

- **Server IP Address:**  
  In `chat1.cpp`, set the `serverAddress` variable to your server's IP address (e.g., `"192.168.1.5"`).  
  **Do not include `/24` or subnet mask.**  
  Example:
  ```cpp
  string serverAddress = "192.168.1.5";
  ```

- **Port:**  
  Default is `12345`. Change in both server and client if needed.

## Notes

- Both server and client must be able to communicate over the network (check firewall settings).
- Only tested on Windows using Winsock.
- For Linux support, code changes are required (replace Winsock with BSD sockets).

## License

This project is for educational purposes.